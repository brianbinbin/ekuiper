apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ekuiper.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ekuiper.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ekuiper.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ekuiper.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        {{- range $mount := .Values.ekuiperMounts }}
        - name: {{ $mount.name }}
          {{- if $.Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ printf "%s-%s" $.Release.Name (tpl $mount.name $) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- end }}

        {{- if .Values.tls.enabled }}
        - name: certs
          secret:
            secretName: {{ template "ekuiper.tlsSecretName" . }}
            items:
              - key: {{ ternary "tls.crt" "ca.crt" .Values.tls.existingSecretFullChain }}
                path: xyz-rootca.pem
              - key: tls.crt
                path: xyz-certificate.pem
              - key: tls.key
                path: xyz-private.pem.key
        {{- end }}

      containers:
        - name: ekuiper
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.ekuiperEnv.enabled }}
          env:
          - name: {{ .Values.ekuiperEnv.keys.mqttDefaultServer }}
            value: "{{ .Values.ekuiperEnv.values.mqttDefaultServer }}"
          - name: {{ .Values.ekuiperEnv.keys.prometheusEnabled }}
            value: "{{ .Values.ekuiperEnv.values.prometheusEnabled }}"
          - name: {{ .Values.ekuiperEnv.keys.premetheusPort }}
            value: "{{ .Values.ekuiperEnv.values.premetheusPort }}"
          - name: {{ .Values.ekuiperEnv.keys.fileLog }}
            value: "{{ .Values.ekuiperEnv.values.fileLog }}"
          {{- end }}
          command: ["./bin/kuiperd"]
          readinessProbe:
            httpGet:
              port: {{ .Values.service.ports.restapi.port | default 9081 }}
            initialDelaySeconds: 5
            periodSeconds: 5
          ports:
            - name: restapi
              containerPort: {{ .Values.service.ports.restapi.port | default 9081 }}
            - name: pushapi
              containerPort: {{ .Values.service.ports.pushapi.port | default 10081 }}
          volumeMounts:
            {{- range $mount := .Values.ekuiperMounts }}
              - name: {{ $mount.name }}
                mountPath: {{ $mount.mountPath }}
            {{- end }}
          {{- if .Values.tls.enabled }}
          - name: certs
            mountPath: "/var/kuiper/xyz-rootca.pem"
            subPath: "xyz-rootca.pem"
            readOnly: true
          - name: certs
            mountPath: "/var/kuiper/xyz-certificate.pem"
            subPath: "xyz-certificate.pem"
            readOnly: true
          - name: certs
            mountPath: "/var/kuiper/xyz-private.pem.key"
            subPath: "xyz-private.pem.key"
            readOnly: true
          {{- end }}
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}



